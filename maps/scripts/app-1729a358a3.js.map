{"version":3,"sources":["scripts/app.js"],"names":["angular","module","selectionGeneratorView","selectionGeneratorViewCtrl","$log","toastr","CounterCastList","counterGenerator","counterGeneratorData","controller","this","counterCastModel","handleCharacterSelection","characterSelection","length","clearList","matrixData","getMatrixData","counterData","getCounterPlayers","updateList","$inject","restrict","scope","templateUrl","controllerAs","directive","acmeNavbar","NavbarController","moment","vm","relativeDate","creationDate","fromNow","bindToController","counterMatrixTable","counterMatrixTableCtrl","CounterMatrixModel","characterData","allCharacterObjectArray","defaultGenData","model","Model","initialData","copy","data","init","__data","allCharacters","allCharacterIdentifierArray","prototype","forEach","xChar","isUndefined","x_data","yChar","__validateCell","allCharacterIdentifierLookup","warn","toggleCell","resetCell","reset","save","factory","$http","$window","loadDefaultData","get","success","Object","freeze","error","msg","loadLocalStorageData","localStorage","i","key","startsWith","LOCALSTORAGE_KEY_PREFIX","JSON","parse","getItem","defaultDataPromise","dataKey","isMutable","setMatrixData","setItem","stringify","service","enemyTeam","scores","enemies","hero","weak","strong","isWeakAgainst","is","against","isStrongAgainst","x","filter","enemy","heroes","keys","heroScores","map","scoreSum","reduce","sum","enemyHero","score","undefined","name","bestAndWorstHeroes","sort","a","b","strongAgainst","weakAgainst","initialList","castList","newList","counterCastList","counterCastListCtrl","castModel","characterSelectionSvc","selectionSvc","DEFAULT_GET_PARAM_KEY","selectedCharacters","obj","char","selectedCharactersArray","getCharactersSelectedArray","getNumberSelectedCharacters","getCharacterSelectCount","characterName","addCharacter","push","removeCharacter","curVal","splice","indexOf","selectionToGetParams","location","search","join","getParamsToSelection","selection","isString","split","character","characterSelectionCtrl","$location","isFunction","onCharacterSelection","Error","attackChars","attackCharacterObjectArray","defenseChars","defenseCharacterObjectArray","tankChars","tankCharacterObjectArray","supportChars","supportCharacterObjectArray","addCharacterToSelection","removeCharacterFromSelection","ATTACK_GROUP","ATTACK","DEFENSE_GROUP","DEFENSE","TANK_GROUP","TANK","SUPPORT_GROUP","SUPPORT","attackCharacterArray","defenseCharacterArray","tankCharacterArray","supportCharacterArray","allCharacterArray","allCharacterNamesArray","allCharacterNames","displayName","group","index","concat","MainController","$timeout","awesomeThings","classAnimation","showToastr","runBlock","debug","run","routeConfig","$routeProvider","$locationProvider","html5Mode","enabled","requireBase","when","template","reloadOnSearch","resolve","otherwise","redirectTo","config","constant","malarkey","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","maxOpened","$templateCache","put"],"mappings":"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","file":"scripts/app-1729a358a3.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('owcast', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngRoute', 'ui.bootstrap', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .directive('selectionGeneratorView', selectionGeneratorView);\n\n    function selectionGeneratorView() {\n        return {\n            restrict: 'EA', // <-- We all hate this evil company, right?\n            scope: {},\n            controller: selectionGeneratorViewCtrl,\n            templateUrl: 'app/components/selectionGeneratorView/selectionGeneratorView.html',\n            controllerAs: 'sgView'\n        };\n\n        /** @ngInject */\n        function selectionGeneratorViewCtrl($log, toastr, CounterCastList, counterGenerator, counterGeneratorData) {\n            var controller = this;\n            this.counterCastModel = new CounterCastList();\n\n            this.handleCharacterSelection = function(characterSelection) {\n                if(characterSelection.length == 0) {\n                    return controller.counterCastModel.clearList();\n                }\n                // TODO: Make user allow to choose other than default\n                var matrixData = counterGeneratorData.getMatrixData('default');\n                var counterData = counterGenerator.getCounterPlayers(characterSelection, matrixData);\n                controller.counterCastModel.updateList(counterData);\n            }\n        }\n\n    }\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('owcast')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .directive('counterMatrixTable', counterMatrixTable);\n\n    function counterMatrixTable() {\n        return {\n            restrict: 'E',\n            scope: {\n\n            },\n            controller: counterMatrixTableCtrl,\n            controllerAs: 'ctrMatrixTable',\n            templateUrl: 'app/components/counterMatrix/counterMatrixTable.html',\n            bindToController: true\n        };\n\n        /** @ngInject */\n        function counterMatrixTableCtrl(counterGeneratorData, CounterMatrixModel, characterData) {\n            this.allCharacterObjectArray = characterData.allCharacterObjectArray;\n           // TODO: This will be passed in... this is temporarily used for testing.\n            var defaultGenData = counterGeneratorData.getMatrixData('default');\n            this.model = new CounterMatrixModel(defaultGenData);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .factory('CounterMatrixModel', CounterMatrixModel);\n\n    /** @ngInject */\n    function CounterMatrixModel($log, characterData) {\n        var allCharacters = characterData.allCharacterIdentifierArray;\n\n        function Model(initialData) {\n            initialData = angular.copy(initialData) || {};\n            this.data = this.init(initialData);\n            // Keep a copy of the original data to be used for restoring\n            this.__data = angular.copy(initialData);\n        }\n\n        /**\n         * The initialization method.\n         *\n         * The purpose of this method is to initialize the data of this object.\n         * We need to ensure that there is a value for all possible combinations,\n         * that is, [x][y] E (x = all characters, y = all characters) -> {-1, 0, 1}\n         *\n         * If any data is undefined, the default value will be 0.\n         */\n        Model.prototype.init = function(data) {\n            allCharacters.forEach(function(xChar) {\n                if(angular.isUndefined(data[xChar])) {\n                    data[xChar] = {};\n                }\n\n                var x_data = data[xChar];\n                allCharacters.forEach(function(yChar) {\n                   if(angular.isUndefined(x_data[yChar])) {\n                       x_data[yChar] = 0;\n                   }\n                });\n            });\n\n            return data;\n        };\n\n        Model.prototype.__validateCell = function(xChar, yChar) {\n            if(!characterData.allCharacterIdentifierLookup[xChar]) {\n                $log.warn(\n                    \"Invalid x axis character specified when attempting to access cell: \", xChar\n                );\n                return false;\n            }\n            if(!characterData.allCharacterIdentifierLookup[yChar]) {\n                $log.warn(\n                    \"Invalid y axis character specified when attempting to access cell: \", yChar\n                );\n                return false;\n            }\n\n            return true;\n        };\n\n        /**\n         * Convert that value such that it follows the following sequence (before -> after):\n         * -1 -> 0\n         * 0 -> 1\n         * 1 -> -1\n         *\n         * Note: the only possible values are {-1, 0, 1}\n         * @param xChar String, the identifier of the x-axis character\n         * @param yChar String, the identifier of the y-axis character\n         */\n        Model.prototype.toggleCell = function(xChar, yChar) {\n            // Ensure we have a valid index for x and y\n            if(!this.__validateCell(xChar, yChar)) { return; }\n            // Finally toggle our cell value.\n            this.data[xChar][yChar] = ((this.data[xChar][yChar] + 2) % 3) - 1\n        };\n\n        Model.prototype.resetCell = function(xChar, yChar) {\n            if(!this.__validateCell(xChar, yChar)) { return; }\n            this.data[xChar][yChar] = this.__data[xChar][yChar];\n        };\n\n        Model.prototype.reset = function() {\n            this.data = angular.copy(this.__data);\n        };\n\n        Model.prototype.save = function() {\n            this.__data = angular.copy(this.data);\n        };\n\n        return Model;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .service('counterGeneratorData', counterGeneratorData);\n\n    /** @ngInject */\n    function counterGeneratorData($http, $log, $window, toastr) {\n        var LOCALSTORAGE_KEY_PREFIX = Object.freeze('matrixData.');\n        /**\n         * Here we are specifying the matrix data as an empty dictionary that will\n         * be appended as data is loaded either through the default json file\n         * or from importing various configurations.\n         */\n        var matrixData = {};\n\n        /**\n         * Function loads default data from the json file located in\n         * 'app/data/defaultCountersMatrix.json'\n         * Will through an error toastr message if there was a failure\n         * in loading the file.\n         */\n        function loadDefaultData() {\n            return $http.get('app/data/defaultCountersMatrix.json')\n                .success(function(data) {\n                    // Save the data to the service this scope and do not allow\n                    // any modification done to the default data.\n                    matrixData.default = Object.freeze(data);\n                })\n                .error(function(msg) {\n                    toastr.error(\n                        'There seems to be an error loading some necessary data'\n                    )\n                    $log.error('Error loading defaultCountersMatrix.json: ', msg);\n                });\n        }\n\n        /**\n         * The purpose of this function is to load saved data from the local storage\n         * We can distinguish the matrix data based on the known prefix\n         */\n        function loadLocalStorageData() {\n            var localStorage = $window.localStorage;\n            for(var i = 0; i < localStorage.length; i++) {\n                var key = localStorage.key(i);\n                if(key.startsWith(LOCALSTORAGE_KEY_PREFIX)) {\n                    matrixData[key] = JSON.parse(localStorage.getItem(key));\n                }\n            }\n        }\n\n        // Expose the default data promise so we can use $route resolve and not load the\n        // Controller until this promise has been resolved.\n        this.defaultDataPromise = loadDefaultData();\n        loadLocalStorageData();\n\n        /**\n         * Method retrieves counter generator data from stored counter data.\n         * If the data does not exist, null is returned and a warning is logged\n         * to the console.\n         *\n         * @param dataKey String, used to reference which matrixData to use\n         * @param isMutable Boolean, shall the return value be mutable? (default: false)\n         * @returns {*}\n         */\n        this.getMatrixData = function(dataKey, isMutable) {\n            var data = matrixData[dataKey];\n            if(!data) {\n                $log.warn('Attempted to access invalid counter matrix data: ', dataKey);\n                return null;\n            }\n            // Note: angular.copy will remove the 'frozen' state of\n            // ny object thus making it mutable.\n            return isMutable ? angular.copy(data) : data;\n        };\n\n        this.setMatrixData = function(dataKey, data) {\n            matrixData[dataKey] = Object.freeze(data);\n            $window.localStorage.setItem(\n                LOCALSTORAGE_KEY_PREFIX + dataKey,\n                JSON.stringify(data)\n            );\n        };\n    }\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .service('counterGenerator', counterGenerator)\n        .factory('CounterCastList', CounterCastList);\n\n    function counterGenerator() {\n        // Takes an array of enemy hero names and a score matrix and returns the top counter heroes\n        this.getCounterPlayers = function (enemyTeam, scores) {\n            // Helper to get the enemy heros that a hero is strong or weak against\n            function enemies(hero) {\n                var weak = -1;\n                var strong = 1;\n                return {\n                    isWeakAgainst: function () {\n                        return this.is(weak).against();\n                    },\n                    isStrongAgainst: function () {\n                        return this.is(strong).against();\n                    },\n                    is: function (x) {\n                        return {\n                            against: function () {\n                                return enemyTeam.filter(function (enemy) {\n                                    return scores[hero] && scores[hero][enemy] == x;\n                                });\n                            }\n                        };\n                    }\n                };\n            };\n\n            var heroes = Object.keys(scores);\n            // Assign a score to each hero that describes how strong it is against the enemy team as a whole\n            var heroScores = heroes.map(function (hero) {\n                var scoreSum = enemyTeam.reduce(function (sum, enemyHero) {\n                    // if hero is strong against enemyHero, then score[hero][enemyHero] = 1\n                    var score = scores[hero] && scores[hero][enemyHero];\n                    if (score != undefined) {\n                        return sum + score;\n                    }\n                    return sum;\n                }, 0);\n                return {name: hero, score: scoreSum};\n            });\n            // Filter heroes that have no score\n            var bestAndWorstHeroes = heroScores.filter(function(hero) {\n                return hero.score != 0;\n            }).sort(function (a, b) {\n                return b.score - a.score;\n            });\n\n            // Return some additional info with the top heroes\n            return bestAndWorstHeroes.map(function (hero) {\n                return {\n                    hero: hero.name,\n                    strongAgainst: enemies(hero.name).isStrongAgainst(),\n                    weakAgainst: enemies(hero.name).isWeakAgainst(),\n                    score: hero.score\n                };\n            });\n        }\n    }\n\n    function CounterCastList() {\n        function Model(initialList) {\n            this.castList = initialList || [];\n        }\n\n        Model.prototype.updateList = function(newList) {\n            this.castList = newList;\n        };\n\n        Model.prototype.clearList = function() {\n            this.castList = [];\n        }\n\n\n        return Model;\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .directive('counterCastList', counterCastList);\n\n    function counterCastList() {\n        return {\n            restrict: 'E',\n            scope: {\n                'castModel': '='\n            },\n            templateUrl: 'app/components/counterGenerator/counterCastList.html',\n            controller: counterCastListCtrl,\n            controllerAs: 'counterCastList',\n            bindToController: true\n        };\n\n        function counterCastListCtrl() {\n            // TODO ?\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .service('characterSelectionSvc', characterSelectionSvc);\n\n    /** @ngInject */\n    function characterSelectionSvc($log, characterData) {\n        var selectionSvc = this;\n        // This constant is the default GET param key that will be used to store the current enemy team selection\n        this.DEFAULT_GET_PARAM_KEY = Object.freeze('enemyTeam');\n\n        // The initial state of the service has no characters selected.\n        // A dictionary of all the characters with the values set to 0\n        var selectedCharacters = characterData.allCharacterObjectArray.reduce(function(obj, char) {\n            obj[char.name] = 0;\n            return obj;\n        }, {});\n        // A simple data structure that just contains all the characters selected as an array\n        // for example, [ 'hanzo', 'genji', 'hanzo', 'mei' ]\n        var selectedCharactersArray = [];\n\n        /**\n         * Method returns a copy of the original selected characters array.\n         * We don't want to return the original reference since modifying that array\n         * may break the functionality of this service.\n         *\n         * Modification of the array is strictly dependant on the methods exposed\n         * by this service.\n         */\n        this.getCharactersSelectedArray = function() {\n            return angular.copy(selectedCharactersArray);\n        };\n        /**\n         * Method simply returns the amount of selected characters.\n         * @returns {Number}\n         */\n        this.getNumberSelectedCharacters = function() {\n            return selectedCharactersArray.length;\n        };\n\n        /**\n         * Method the amount of the same selected characters.\n         * @param characterName\n         * @returns {*}\n         */\n        this.getCharacterSelectCount = function(characterName) {\n            if(!characterData.allCharacterIdentifierLookup[characterName]) {\n                $log.warn(\n                    'Attempted to get a non-existing character: ' + characterName\n                );\n                return null;\n            }\n            \n            return selectedCharacters[characterName];\n        };\n\n        /**\n         * Method adds a character to two data structures, our object that maintains the count of\n         * each characters `selectedCharacters` and pushes the characterName to the `selectedCharactersArray`\n         *\n         * If the characterName parameter is invalid, an warning message will be logged and\n         * the value returned will be null.\n         *\n         * @param characterName String, identifier of a character\n         * @returns {*}\n         */\n        this.addCharacter = function(characterName) {\n            if(!characterData.allCharacterIdentifierLookup[characterName]) {\n                return $log.warn(\n                    'Attempted to add a non-existing character: ' + characterName\n                );\n            }\n            selectedCharactersArray.push(characterName);\n            return selectedCharacters[characterName]++;\n        };\n\n        /**\n         * Method removes a character from both data structures.  In our count data structure, it will\n         * decrease the value by 1 (with a min threshold of 0, that is, if value is 0 and remove is applied\n         * @param characterName\n         * @returns {*}\n         */\n        this.removeCharacter = function(characterName) {\n            if(!characterData.allCharacterIdentifierLookup[characterName]) {\n                return $log.warn(\n                    'Attempted to remove a non-existing character: ' + characterName\n                );\n            }\n\n            // Subtract from the current value stored unless it goes below 0\n            var curVal = selectedCharacters[characterName];\n            if(curVal > 0) {\n                selectedCharacters[characterName]--;\n                selectedCharactersArray.splice(selectedCharactersArray.indexOf(characterName), 1);\n            }\n        };\n\n        /**\n         * Method applies the current selection to the URL GET params as comma seperated values\n         * based on the selectedCharactersArray.\n         * @param location $location angular service\n         * @param key key to be used in URL (optional)\n         */\n        this.selectionToGetParams = function(location, key) {\n            key = key || selectionSvc.DEFAULT_GET_PARAM_KEY;\n            location.search(key, selectedCharactersArray.join(',') || null);\n        };\n\n        /**\n         * Method applies GET parameters in the URL to the current selection.\n         * @param location $location angular service\n         * @param key key to be used to retrive GET params\n         */\n        this.getParamsToSelection = function(location, key) {\n            key = key || selectionSvc.DEFAULT_GET_PARAM_KEY;\n            var selection = location.search()[key];\n            selection = (angular.isString(selection) ? selection.split(',') : []);\n            selection.forEach(function(character) {\n               selectionSvc.addCharacter(character);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('owcast')\n        .directive('characterSelection', characterSelection);\n\n    /** @ngInject */\n    function characterSelection() {\n        return {\n            restrict: 'EA',\n            scope: {\n                'onCharacterSelection': '=',\n            },\n            templateUrl: 'app/components/characterSelection/characterSelection.html',\n            controller: characterSelectionCtrl,\n            controllerAs: 'charSel',\n            bindToController: true\n        };\n\n        /** @ngInject */\n        function characterSelectionCtrl($log, $location, toastr, characterSelectionSvc, characterData) {\n            // Ensure that onCharacterSelection is a function, otherwise throw programmer error!\n            if(!angular.isFunction(this.onCharacterSelection)) {\n                throw new Error(\n                    'Invalid use of characterSelection directive, must provide a \"onCharacterSelection\" attr ' +\n                    'for callback.'\n                );\n            }\n            var charSel = this;\n            \n            this.attackChars = characterData.attackCharacterObjectArray;\n            this.defenseChars = characterData.defenseCharacterObjectArray;\n            this.tankChars = characterData.tankCharacterObjectArray;\n            this.supportChars = characterData.supportCharacterObjectArray;\n\n            // Initialize selection based on getParams\n            characterSelectionSvc.getParamsToSelection($location);\n            this.onCharacterSelection(characterSelectionSvc.getCharactersSelectedArray());\n\n            // Expose adding/removing character from controller\n            this.addCharacterToSelection = function(name) {\n                // Check to see if we already have 6 characters, can't add more than that!\n                if (characterSelectionSvc.getNumberSelectedCharacters() == 6) {\n                    return toastr.error('A team cannot have more than 6 players!');\n                }\n                characterSelectionSvc.addCharacter(name);\n                characterSelectionSvc.selectionToGetParams($location);\n                // Trigger onSelection callback\n                this.onCharacterSelection(characterSelectionSvc.getCharactersSelectedArray());\n            };\n\n            this.removeCharacterFromSelection = function(characterName) {\n                characterSelectionSvc.removeCharacter(characterName);\n                characterSelectionSvc.selectionToGetParams($location);\n                this.onCharacterSelection(characterSelectionSvc.getCharactersSelectedArray());\n            };\n            this.getCharacterSelectCount = characterSelectionSvc.getCharacterSelectCount;\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .service('characterData', characterData);\n\n    // Constants for the available groups.\n    var ATTACK = 'attack';\n    var DEFENSE = 'defense';\n    var TANK = 'tank';\n    var SUPPORT = 'support';\n\n    /**\n     * An array of all the available characters in OverWatch\n     * The data structure for each character is as follows:\n     * {\n     *      name: String, the internal identifier\n     *      displayName: String, what the user will see for each character\n     *      group: String, what group they belong to (see above constants)\n     *      index: Int, How they will be ordered in the selection.\n     *          We want a deterministic ordering that mimics the game.\n     * }\n     */\n    var attackCharacterArray= [\n        {\n            name: 'genji',\n            displayName: 'Genji',\n            group: ATTACK,\n            index: 0\n        },\n        {\n            name: 'mccree',\n            displayName: 'McCree',\n            group: ATTACK,\n            index: 1\n        },\n        {\n            name: 'pharah',\n            displayName: 'Pharah',\n            group: ATTACK,\n            index: 2\n        },\n        {\n            name: 'reaper',\n            displayName: 'Reaper',\n            group: ATTACK,\n            index: 3\n        },\n        {\n            name: 'soldier76',\n            displayName: 'Soldier: 76',\n            group: ATTACK,\n            index: 4\n        },\n        {\n            name: 'tracer',\n            displayName: 'Tracer',\n            group: ATTACK,\n            index: 5\n        },\n    ];\n    var defenseCharacterArray = [\n        {\n            name: 'bastion',\n            displayName: 'Bastion',\n            group: DEFENSE,\n            index: 0\n        },\n        {\n            name: 'hanzo',\n            displayName: 'Hanzo',\n            group: DEFENSE,\n            index: 1\n        },\n        {\n            name: 'junkrat',\n            displayName: 'Junkrat',\n            group: DEFENSE,\n            index: 2\n        },\n        {\n            name: 'mei',\n            displayName: 'Mei',\n            group: DEFENSE,\n            index: 3\n        },\n        {\n            name: 'torbjorn',\n            displayName: 'Torbjörn',\n            group: DEFENSE,\n            index: 4\n        },\n        {\n            name: 'widowmaker',\n            displayName: 'Widowmaker',\n            group: DEFENSE,\n            index: 5\n        },\n    ];\n    var tankCharacterArray = [\n        {\n            name: 'dva',\n            displayName: 'D.Va',\n            group: TANK,\n            index: 0\n        },\n        {\n            name: 'reinhardt',\n            displayName: 'Reinhardt',\n            group: TANK,\n            index: 1\n        },\n        {\n            name: 'roadhog',\n            displayName: 'Roadhog',\n            group: TANK,\n            index: 2\n        },\n        {\n            name: 'winston',\n            displayName: 'Winston',\n            group: TANK,\n            index: 3\n        },\n        {\n            name: 'zarya',\n            displayName: 'Zarya',\n            group: TANK,\n            index: 4\n        },\n    ];\n    var supportCharacterArray = [\n        {\n            name: 'lucio',\n            displayName: 'Lúcio',\n            group: SUPPORT,\n            index: 0\n        },\n        {\n            name: 'mercy',\n            displayName: 'Mercy',\n            group: SUPPORT,\n            index: 1\n        },\n        {\n            name: 'symmetra',\n            displayName: 'Symmetra',\n            group: SUPPORT,\n            index: 2\n        },\n        {\n            name: 'zenyatta',\n            displayName: 'Zenyatta',\n            group: SUPPORT,\n            index: 3\n        },\n    ];\n\n    var allCharacterArray = attackCharacterArray.concat(\n        defenseCharacterArray,\n        tankCharacterArray,\n        supportCharacterArray\n    );\n\n    var allCharacterNamesArray = [];\n    // Keep a reference of all the available character names as a lookup \"dictionary\"\n    // We can then use this to log potential errors of invalid characters being used.\n    var allCharacterNames = allCharacterArray.reduce(function(obj, char) {\n        obj[char.name] = true;\n        allCharacterNamesArray.push(char.name);\n        return obj;\n    }, {});\n\n    /**\n     * The purpose of this service is to provide information about all the available\n     * characters in the game.\n     */\n    function characterData() {\n        // Expose some constants\n        this.ATTACK_GROUP = Object.freeze(ATTACK);\n        this.DEFENSE_GROUP = Object.freeze(DEFENSE);\n        this.TANK_GROUP = Object.freeze(TANK);\n        this.SUPPORT_GROUP = Object.freeze(SUPPORT);\n        \n        this.attackCharacterObjectArray = Object.freeze(attackCharacterArray);\n        this.defenseCharacterObjectArray = Object.freeze(defenseCharacterArray);\n        this.tankCharacterObjectArray = Object.freeze(tankCharacterArray);\n        this.supportCharacterObjectArray = Object.freeze(supportCharacterArray);\n        /**\n         * An array that contains all of the character objects.\n         * @type {Object}\n         */\n        this.allCharacterObjectArray = Object.freeze(allCharacterArray);\n        /**\n         * An array that contains all of the character identifiers.\n         * It is a \"frozen\" array and cannot be modified.\n         * \n         * @type {Array}\n         */\n        this.allCharacterIdentifierArray = Object.freeze(allCharacterNamesArray);\n        \n        /**\n         * An object with each character identifier as a key and a \"true\" boolean value for each key.\n         * This can be used for O(1) lookups for identifier validations.\n         * \n         * @type {Object}\n         */\n        this.allCharacterIdentifierLookup = Object.freeze(allCharacterNames);\n    }\n\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('owcast')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1467334525945;\n    vm.showToastr = showToastr;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('owcast')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .config(routeConfig);\n\n    /** @ngInject */\n    function routeConfig($routeProvider, $locationProvider) {\n        // Let's run in HTML 5 mode!\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false\n        });\n\n        $routeProvider\n            .when('/select', {\n                template: '<selection-generator-view></selection-generator-view>',\n                reloadOnSearch: false,\n                resolve: {\n                    /** @ngInject */\n                    'counterGeneratorData': function (counterGeneratorData) {\n                        return counterGeneratorData.defaultDataPromise;\n                    }\n                }\n            })\n            .when('/matrixData', {\n                template: '<counter-matrix-table></counter-matrix-table>',\n                resolve: {\n                    /** @ngInject */\n                    'counterGeneratorData': function (counterGeneratorData) {\n                        return counterGeneratorData.defaultDataPromise;\n                    }\n                }\n            })\n            .when('/matrixData/import', {\n                // TODO\n            })\n            .otherwise({\n                redirectTo: '/select'\n            });\n\n    }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('owcast')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function () {\n    'use strict';\n\n    angular\n        .module('owcast')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider, toastrConfig) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n\n        // Set options third-party lib\n        toastrConfig.allowHtml = true;\n        toastrConfig.timeOut = 3000;\n        toastrConfig.positionClass = 'toast-top-right';\n        toastrConfig.preventDuplicates = false;\n        toastrConfig.progressBar = true;\n        toastrConfig.maxOpened = 5;\n    }\n\n})();\n\nangular.module(\"owcast\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><div><acme-navbar creation-date=main.creationDate></acme-navbar></div><div class=\\\"jumbotron text-center\\\"><h1>\\'Allo, \\'Allo!</h1><p class=lead><img src=assets/images/yeoman.png alt=\\\"I\\'m Yeoman\\\"><br>Always a pleasure scaffolding your apps.</p><p class=\\\"animated infinite\\\" ng-class=main.classAnimation><button type=button class=\\\"btn btn-lg btn-success\\\" ng-click=main.showToastr()>Splendid Toastr</button></p><p>With ♥ thanks to the contributions of<acme-malarkey extra-values=\\\"[\\'Yeoman\\', \\'Gulp\\', \\'Angular\\']\\\"></acme-malarkey></p></div><div class=row><div class=\\\"col-sm-6 col-md-4\\\" ng-repeat=\\\"awesomeThing in main.awesomeThings | orderBy:\\'rank\\'\\\"><div class=thumbnail><img class=pull-right ng-src=\\\"assets/images/{{ awesomeThing.logo }}\\\" alt=\\\"{{ awesomeThing.title }}\\\"><div class=caption><h3>{{ awesomeThing.title }}</h3><p>{{ awesomeThing.description }}</p><p><a ng-href={{awesomeThing.url}}>{{ awesomeThing.url }}</a></p></div></div></div></div></div>\");\n$templateCache.put(\"app/components/characterSelection/characterSelection.html\",\"<div><div><h3>Attack Chars</h3><div ng-repeat=\\\"char in charSel.attackChars\\\">{{char.displayName}} <span ng-click=charSel.addCharacterToSelection(char.name)>[ + ]</span> <span>[ {{charSel.getCharacterSelectCount(char.name)}} ]</span> <span ng-click=charSel.removeCharacterFromSelection(char.name)>[ - ]</span></div></div><div><h3>Defense Chars</h3><div ng-repeat=\\\"char in charSel.defenseChars\\\">{{char.displayName}} <span ng-click=charSel.addCharacterToSelection(char.name)>[ + ]</span> <span>[ {{charSel.getCharacterSelectCount(char.name)}} ]</span> <span ng-click=charSel.removeCharacterFromSelection(char.name)>[ - ]</span></div></div><div><h3>Tank Chars</h3><div ng-repeat=\\\"char in charSel.tankChars\\\">{{char.displayName}} <span ng-click=charSel.addCharacterToSelection(char.name)>[ + ]</span> <span>[ {{charSel.getCharacterSelectCount(char.name)}} ]</span> <span ng-click=charSel.removeCharacterFromSelection(char.name)>[ - ]</span></div></div><div><h3>Support Chars</h3><div ng-repeat=\\\"char in charSel.supportChars\\\">{{char.displayName}} <span ng-click=charSel.addCharacterToSelection(char.name)>[ + ]</span> <span>[ {{charSel.getCharacterSelectCount(char.name)}} ]</span> <span ng-click=charSel.removeCharacterFromSelection(char.name)>[ - ]</span></div></div></div>\");\n$templateCache.put(\"app/components/counterGenerator/counterCastList.html\",\"<div><div ng-repeat=\\\"character in counterCastList.castModel.castList\\\">{{character | json}}</div></div>\");\n$templateCache.put(\"app/components/counterMatrix/counterMatrixTable.html\",\"<table class=\\\"table table-bordered table-hover table-condensed\\\"><thead><tr><th>#</th><!-- We can \\\"bind-once\\\" the following because the characters should never change --><th ng-repeat=\\\"c in ::ctrMatrixTable.allCharacterObjectArray\\\">{{::c.displayName}}</th></tr></thead><tbody><tr ng-repeat=\\\"yChar in ::ctrMatrixTable.allCharacterObjectArray\\\"><td><strong>{{::yChar.displayName}}</strong></td><td ng-repeat=\\\"xChar in ::ctrMatrixTable.allCharacterObjectArray\\\" ng-click=\\\"ctrMatrixTable.model.toggleCell(xChar.name, yChar.name)\\\">{{ctrMatrixTable.model.data[xChar.name][yChar.name]}}</td></tr></tbody></table>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=https://github.com/Swiip/generator-gulp-angular><span class=\\\"glyphicon glyphicon-home\\\"></span> Gulp Angular</a></div><div class=\\\"collapse navbar-collapse\\\" id=bs-example-navbar-collapse-6><ul class=\\\"nav navbar-nav\\\"><li class=active><a ng-href=#>Home</a></li><li><a ng-href=#>About</a></li><li><a ng-href=#>Contact</a></li></ul><ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>\");\n$templateCache.put(\"app/components/selectionGeneratorView/selectionGeneratorView.html\",\"<div class=row><div class=col-md-6><h3>Character Selection</h3><character-selection on-character-selection=sgView.handleCharacterSelection></character-selection></div><div class=col-md-6><h3>Best Counters</h3><counter-cast-list cast-model=sgView.counterCastModel></counter-cast-list></div></div>\");}]);"],"sourceRoot":"/source/"}